using System;
using System.Net.WebSockets;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

class Program
{
    static async Task Main(string[] args)
    {
        Console.WriteLine("Connecting to WebSocket server...");

        // Establish WebSocket connection to the server
        var client = new ClientWebSocket();
        await client.ConnectAsync(new Uri("wss://ca2e-2401-4900-7c6d-34bf-60fe-1b06-3718-eea3.ngrok-free.app"), CancellationToken.None);  // Replace with the server's public IP

        Console.WriteLine("Connected to the WebSocket server.");

        // Start task to receive messages from the WebSocket server
        var receiveTask = ReceiveMessages(client);

        // Main loop to send messages
        string message;
        while ((message = Console.ReadLine()) != null)
        {
            if (string.IsNullOrEmpty(message)) continue;
            var buffer = Encoding.UTF8.GetBytes(message);
            await client.SendAsync(new ArraySegment<byte>(buffer), WebSocketMessageType.Text, true, CancellationToken.None);
        }

        // Close the WebSocket connection
        await client.CloseAsync(WebSocketCloseStatus.NormalClosure, "Client closing", CancellationToken.None);
    }

    static async Task ReceiveMessages(ClientWebSocket client)
    {
        var buffer = new byte[1024];
        WebSocketReceiveResult result;

        while (client.State == WebSocketState.Open)
        {
            result = await client.ReceiveAsync(new ArraySegment<byte>(buffer), CancellationToken.None);
            if (result.MessageType == WebSocketMessageType.Text)
            {
                var message = Encoding.UTF8.GetString(buffer, 0, result.Count);
                Console.WriteLine("Received: " + message);
            }
        }
    }
}
